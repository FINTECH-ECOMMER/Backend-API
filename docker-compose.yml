version: "3"
services:
  backend-db:
    build:
      context: ./docker/db
      dockerfile: .
    user: root
    restart: unless-stopped
    environment:
      SA_PASSWORD: "${DB_PASSWORD}"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "${MSSQL_PID}"
      MSSQL_DB: "${DB_NAME}"
    ports:
      - "${SQL_PORT}:1433"
    volumes:
      - './volumes/sqlserver/data:/var/opt/mssql/data'
      - './volumes/sqlserver/log:/var/opt/mssql/log'
    networks:
      - finecomm-network
  cache-redis:
    image: redis:7.0-alpine
    restart: on-failure
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - './volumes/redis:/data'
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - finecomm-network
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: on-failure
    environment:
      REDIS_HOST: cache-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: ${REDIS_COMMANDER_HTTP_USER}
      HTTP_PASSWORD: ${REDIS_COMMANDER_HTTP_PASSWORD}
    depends_on:
      - cache-redis
    ports:
      - "${REDIS_COMMANDER_PORT}:8081"
    networks:
      - finecomm-network
volumes:
  mssql-data:
networks:
  finecomm-network:
    driver: bridge